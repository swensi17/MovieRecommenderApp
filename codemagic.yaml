workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install dependencies
        script: |
          echo "Installing XcodeGen..."
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.zprofile
          eval "$(/opt/homebrew/bin/brew shellenv)"
          brew install xcodegen
          
      - name: Debug Info
        script: |
          echo "Current directory:"
          pwd
          echo "\nDirectory contents:"
          ls -la
          echo "\nMovieApp directory:"
          ls -la MovieApp || true
          echo "\nProject structure:"
          find . -type f || true
          echo "\nXcode version:"
          xcodebuild -version
          
      - name: Generate Xcode Project
        script: |
          # Navigate to project directory
          cd $CM_BUILD_DIR
          
          # Generate Xcode project from configuration
          xcodegen generate
          
          echo "Created Xcode project:"
          ls -la
          
          echo "Available schemes:"
          xcodebuild -project MovieApp.xcodeproj -list || true
          
      - name: Build for simulator
        script: |
          # Navigate to project directory
          cd $CM_BUILD_DIR
          
          # Create build directory
          mkdir -p build
          
          # Show build settings
          echo "Build settings:"
          xcodebuild -project MovieApp.xcodeproj -scheme MovieApp -showBuildSettings || true
          
          # Build for simulator
          xcodebuild clean build \
            -project MovieApp.xcodeproj \
            -scheme MovieApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            SWIFT_VERSION=5.0 \
            DEVELOPMENT_TEAM="" \
            PRODUCT_BUNDLE_IDENTIFIER="com.example.MovieApp" \
            ASSETCATALOG_COMPILER_APPICON_NAME="" \
            ENABLE_BITCODE=NO \
            ONLY_ACTIVE_ARCH=YES \
            -derivedDataPath build \
            -verbose || {
              echo "Build failed. Showing xcodebuild output:"
              cat $(find build -name "*.log" | grep -i "xcodebuild") || true
              exit 1
            }
            
      - name: Archive and export IPA
        script: |
          # Navigate to project directory
          cd $CM_BUILD_DIR
          
          # Archive for device
          xcodebuild clean archive \
            -project MovieApp.xcodeproj \
            -scheme MovieApp \
            -configuration Debug \
            -sdk iphoneos \
            -archivePath build/MovieApp.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            SWIFT_VERSION=5.0 \
            DEVELOPMENT_TEAM="" \
            PRODUCT_BUNDLE_IDENTIFIER="com.example.MovieApp" \
            ASSETCATALOG_COMPILER_APPICON_NAME="" \
            ENABLE_BITCODE=NO \
            -verbose || {
              echo "Archive failed. Showing xcodebuild output:"
              cat $(find build -name "*.log" | grep -i "xcodebuild") || true
              exit 1
            }
            
          # Export IPA
          xcodebuild -exportArchive \
            -archivePath build/MovieApp.xcarchive \
            -exportPath build/MovieApp \
            -exportOptionsPlist exportOptions.plist \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO || {
              echo "Export failed. Showing xcodebuild output:"
              cat $(find build -name "*.log" | grep -i "xcodebuild") || true
              exit 1
            }
            
    artifacts:
      - build/**/*.app
      - build/**/*.ipa
      - build/MovieApp.xcarchive/dSYMs/*.dSYM
